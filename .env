# API information
API_NAME=NodeJS Express API for MySQL
API_DESCRIPTION=API to manage resources, users, the users groups (like roles) and the groups permissions on resources.<br>Users can register, log in, change their password and renew their session.
API_CREATOR=dev@aubin.cc
API_PORT=8080

# MySQL or MariaDB database information
DB_HOST=localhost # localhost // if your database is on the same server as the API
DB_PORT=3306
DB_USER=node_api
DB_PASSWORD=50FTW4R3_Q4_P45$W0RD
DB_NAME=mydb
DB_LOGS_IN_CONSOLE=0 # 1 shows "SELECT", "UPDATE", "DELETE", "INSERT", "CREATE", "ALTER" and "DROP" logs in the console

# Flush renew tokens periodically
DB_FLUSH_RENEWJWT_CRON=0 2 * * * # every night at 2 a.m.
DB_FLUSH_RENEWJWT_AFTER=90 # older than 90 days

# Sessions secret keys and duration
SESSION_TOKEN_SECRET=v3ry_0wn_s3cr3t_K3Y! # change this!! and change it again from time to time
SESSION_TOKEN_MAXAGE=300 # 5 minutes // 3600 # 1 hour
SESSION_RENEW_TOKEN_SECRET=4_t0t4lly_d1ff3r3nt_s3cr3t_K3Y? # change this!! and change it again from time to time
SESSION_RENEW_TOKEN_MAXAGE=3600 # 1 hour // 43200 # 12 hours
SESSION_CLOCK_TOLERANCE= 10 # 10 seconds to avoid clock skew

# Express rate limits on routes
REQUEST_LIMIT_REGISTER_WINDOW=60 # 1 hour
REQUEST_LIMIT_REGISTER_MAX=2 # 2 new users per IP per REQUEST_LIMIT_REGISTER_WINDOW
REQUEST_LIMIT_ALL_WINDOW=5 # 5 minutes
REQUEST_LIMIT_ALL_MAX=100 # 100 requests per IP per REQUEST_LIMIT_ALL_WINDOW

# Check distance between old and new when changing password
PASSWORD_LEVENSHTEIN_DISTANCE=5

# Swagger available at endpoint /api if set to 1
SWAGGER_DOC_AVAILABLE=0
SWAGGER_DOC_ENDPOINT=/api

# Cors Options
# Don't forget to edit the corsOptions value in `index.js:L28`